version: '3.8'

services:
  python:
    build:
      context: ./python
      dockerfile: Dockerfile
    container_name: python_service
    command: uvicorn src.main:app --host 0.0.0.0 --port ${PYTHON_PORT:-8000}
    ports:
      - "${PYTHON_PORT:-8000}:${PYTHON_PORT:-8000}"
    volumes:
      - ./python:/app
    env_file:
      - .env
    depends_on:
      - db

  nodejs:
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    container_name: node_service
    command: npm start
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    volumes:
      - ./nodejs:/app
    working_dir: /app
    env_file:
      - .env
    depends_on:
      - db

  typescript:
    build:
      context: ./typescript
      dockerfile: Dockerfile
    container_name: ts_service
    command: sh -c "npm install && npm run build && npm start"
    ports:
      - "${TS_PORT:-4000}:${TS_PORT:-4000}"
    volumes:
      - ./typescript:/app
    working_dir: /app
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:15
    container_name: pg_db
    restart: always
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

volumes:
  pg_data:
